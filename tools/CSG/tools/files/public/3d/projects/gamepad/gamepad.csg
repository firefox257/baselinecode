{
  "csgCode": [
    {
      "title": "Work on",
      "content": "\n\nvar s=shape(rotatePath(0,{\n\t\tpath:[\n\t\t\t\"m\", 0,0,\n\t\t\t\"l\",0,20,\n\t\t\t\"l\",10,10,\n\t\t\t\"l\",0,0\n\t\t],\n\t\tfn:100\n\t}));\n\nreturn rotate([0,0,0],linePaths3d(s, {\n\t\tpath:[\n\t\t\t\"m\", 0,0,0,\n\t\t\t\"lr\",10,0,0,\n\t\t\t\"lr\", 20,20,0,\n\t\t\t\"qr\", 0,10,0, -10,10,0 ,\n\t\t\t\"lr\", -30,0,0\n\t\t\t\n\t\t],\n\t\tfn:30\n\n\t}));\n\n\n\n\n\n\n\n\n\n"
    },
    {
      "title": "Case Left",
      "content": "\n\n\n\nvar height=3 *inch;\n\n\nvar top =shape({\n\t\tpath:[\n\t\t\t\"m\", 0, 0,\n\t\t\t\"l\" -inch, 0,\n\t\t\t\"q\", -2*inch, 0, -2*inch, inch,\n\t\t\t\"l\", -2*inch, 2*inch,\n\t\t\t\"q\", -2*inch, 3*inch, -1*inch, 3*inch,\n\t\t\t\"l\", 0, 3*inch,\n\t\t\t\"l\", 0,0\n\t\t],\n\t\tfn:100});\n\n\nvar plate= path3d([\n\t\t\t\"m\",0,0,0,\n\t\t\t\"l\", 0,0,inch\n\t\t], 100);\nreturn linePaths3d(top, plate);\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
      "title": "test press button",
      "content": "\n\n/*\n\n{\n\tw:width,\n\tl:length,\n\th:height,\n\ts: spring thick,\n\to:over header miunt height\n}\n\n*/\nfunction buttonMech(o)\n{\n\tvar springPath ={\n\t\tpath:[\n\t\t\t\"m\", 0,0,\n\t\t\t\"lr\", 1,1,\n\t\t\t\"lr\", -1,1,\n\t\t\t\"lr\",0.5,0,\n\t\t\t\"lr\", 1,-1,\n\t\t\t\"lr\", -1,-1,\n\t\t\t\"lr\", -0.5,0\n\t\t]\n\t}\n\n\n\n}\n\n\n\nreturn floor(cube([10,10,10]));"
    },
    {
      "title": "cabel test small",
      "content": "\n\n/*\n\n{\n\td: wire diameter,\n\tc: wite paralel count,\n\tl: wire length,\n\tpt: padding top,\n\tpb: padding bottom,\n\tpl: padding left,\n\tpr: padding right,\n\tpm: padding middle\n}\n\n*/\n\n\n\n\nfunction pwire(params)\n{\n\n\tvar p= {\n\t\td: 0.4,\n\t\tc: 2,\n\t\tl:20,\n\t\tpt: 0.4,\n\t\tpb: 0.4,\n\t\tpl: 0.4,\n\t\tpr: 0.4,\n\t\tpm:0.4,\n\t\tget r(){\n\t\t\treturn this.d/2;\n\t\t}\n\t}\n\n\tvar _isStart=true;\n\tfor(const i in params)\n\t{\n\t\tp[i] = params[i];\n\n\t}\n\n\tvar swire;\n\n\t(()=>{\n\n\n\t\t\tvar path=[];\n\t\t\t//var h = p.pt+p.pb+p.d;\n\t\t\t//var w = p.l+p.m+(p.d*p.c)+(p.pm* p.c-1);\n\t\t\tfor(var i = 0; i< p.c;i++)\n\t\t\t{\n\t\t\t\tpath.push(\n\t\t\t\t\t\"m\", (p.d+ p.pm)*i,0,\n\t\t\t\t\t\"xr\", p.r, p.r,  p.d, 0,\n\t\t\t\t\t\"xr\", -p.r, -p.r, -p.d, 0\n\t\t\t\t)\n\n\n\t\t\t}\n\t\t\tswire=shape({\n\t\t\t\t\tpath,\n\t\t\t\t\tfn:10\n\t\t\t\t});\n\n\t\t})();\n\n\n\tfunction stright()\n\t{\n\n\n\n\t\tvar wires=linePaths3d(swire,\n\t\t\t{\n\t\t\t\tpath:[\"m\",0,0,0,\"l\",0,p.l,0],\n\t\t\t\tfn:10\n\t\t\t})\n\t\twires= align({\n\t\t\t\tcx:0,cy:0,cz:0\n\t\t\t},\n\t\t\tunion(wires)\n\t\t);\n\n\t\twires= difference(cube([\n\t\t\t\t\tp.pl+p.pr+(p.d*p.c) + (p.pm*(p.c-1)),\n\t\t\t\t\tp.l,\n\t\t\t\t\tp.pt+p.pb+p.d]),\n\t\t\twires);\n\n\t\treturn wires;\n\t}\n\n\n\n\tfunction pad(params)\n\t{\n\t\tvar pp={\n\t\t\tpadCut:2,//cut length\n\t\t\tpadCutTop: 0.5\n\t\t};\n\t\tfor(var i in params)\n\t\t{\n\t\t\tpp[i]=params[i];\n\t\t}\n\n\t\tvar cu= cube([10,10,10]);\n\t\tif(_isStart)\n\t\t{\n\t\t\tplacement({\n\t\t\t\t\tccx:0,\n\t\t\t\t\ttby:pp.padCut,\n\t\t\t\t\ttbz:-pp.padCutTop\n\t\t\t\t},\n\n\t\t\t\tthis.obj,\n\t\t\t\tcu\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\n\t\t\tplacement({\n\t\t\t\t\tccx:0,\n\t\t\t\t\tbty:-pp.padCut,\n\t\t\t\t\ttbz:-pp.padCutTop\n\t\t\t\t},\n\n\t\t\t\tthis.obj,\n\t\t\t\tcu\n\t\t\t);\n\t\t}\n\n\n\n\n\t\tthis.obj=difference(this.obj,\n\t\t\tcu\n\t\t);\n\n\n\n\t\treturn this;\n\t}\n\n\tfunction end()\n\t{\n\n\t}\n\n\n\n\n\treturn {\n\t\tobj: stright(),\n\t\tpad,\n\t\tstart()\n\t\t{\n\t\t\t_isStart=true;\n\t\t\treturn this;\n\t\t},\n\t\tend()\n\t\t{\n\t\t\t_isStart=false;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n\n\n\n\n}\n//*/\n\n\nreturn pwire({\n\t\tl:5\n\t}).pad({padCut:0.5}).end().pad({padCut:0.5});\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
      "title": "Untitled 5",
      "content": "\n\n\n\nvar c1=color(0xff00ff00, cube([10,10,10]));\n\nvar c2 =cube([10,10,10]);\n\n\n placement({\n\t\tccx:0,\n\t\tccy:0,\n\t\ttbz:0\n\t\t}, c2, c1);\n\nreturn [c2,c1];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
      "title": "Untitled 6",
      "content": ""
    }
  ],
  "editorCode": [
    {
      "title": "Editor Script",
      "content": "// Place reusable functions and objects here. // Access from\n                    CSG Script with include(\"page name\"); /* var constants = {\n                    PI: Math.PI, E: Math.E }; return { constants }; */"
    }
  ],
  "meshCache": {
    "Untitled 5": {
      "mesh": [
        {
          "$jsonMesh": {
            "mesh": {
              "positions": "AACgQAAAoEAAAKBAAACgQAAAoEAAAKDAAACgQAAAoMAAAKBAAACgQAAAoMAAAKDAAACgwAAAoEAAAKDAAACgwAAAoEAAAKBAAACgwAAAoMAAAKDAAACgwAAAoMAAAKBAAACgwAAAoEAAAKDAAACgQAAAoEAAAKDAAACgwAAAoEAAAKBAAACgQAAAoEAAAKBAAACgwAAAoMAAAKBAAACgQAAAoMAAAKBAAACgwAAAoMAAAKDAAACgQAAAoMAAAKDAAACgwAAAoEAAAKBAAACgQAAAoEAAAKBAAACgwAAAoMAAAKBAAACgQAAAoMAAAKBAAACgQAAAoEAAAKDAAACgwAAAoEAAAKDAAACgQAAAoMAAAKDAAACgwAAAoMAAAKDA",
              "normals": "AACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAACAvwAAAAAAAAAAAACAvwAAAAAAAAAAAACAvwAAAAAAAAAAAACAvwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgL8AAAAAAAAAAAAAgL8AAAAAAAAAAAAAgL8AAAAAAAAAAAAAgL8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIC/AAAAAAAAAAAAAIC/AAAAAAAAAAAAAIC/AAAAAAAAAAAAAIC/",
              "indices": "AAACAAEAAgADAAEABAAGAAUABgAHAAUACAAKAAkACgALAAkADAAOAA0ADgAPAA0AEAASABEAEgATABEAFAAWABUAFgAXABUA",
              "materials": [
                {
                  "color": "#ffcc00",
                  "roughness": 0.6,
                  "metalness": 0.2,
                  "side": 2,
                  "flatShading": true,
                  "type": "MeshStandardMaterial"
                }
              ],
              "groups": [],
              "position": [
                0,
                0,
                0
              ],
              "rotation": [
                0,
                0,
                0
              ],
              "scale": [
                1,
                1,
                1
              ]
            },
            "userData": {}
          }
        },
        [
          {
            "$jsonMesh": {
              "mesh": {
                "positions": "AACgQAAAcEEAAKBAAACgQAAAcEEAAKDAAACgQAAAoEAAAKBAAACgQAAAoEAAAKDAAACgwAAAcEEAAKDAAACgwAAAcEEAAKBAAACgwAAAoEAAAKDAAACgwAAAoEAAAKBAAACgwAAAcEEAAKDAAACgQAAAcEEAAKDAAACgwAAAcEEAAKBAAACgQAAAcEEAAKBAAACgwAAAoEAAAKBAAACgQAAAoEAAAKBAAACgwAAAoEAAAKDAAACgQAAAoEAAAKDAAACgwAAAcEEAAKBAAACgQAAAcEEAAKBAAACgwAAAoEAAAKBAAACgQAAAoEAAAKBAAACgQAAAcEEAAKDAAACgwAAAcEEAAKDAAACgQAAAoEAAAKDAAACgwAAAoEAAAKDA",
                "normals": "AACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAACAvwAAAAAAAAAAAACAvwAAAAAAAAAAAACAvwAAAAAAAAAAAACAvwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgL8AAAAAAAAAAAAAgL8AAAAAAAAAAAAAgL8AAAAAAAAAAAAAgL8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIC/AAAAAAAAAAAAAIC/AAAAAAAAAAAAAIC/AAAAAAAAAAAAAIC/",
                "indices": "AAACAAEAAgADAAEABAAGAAUABgAHAAUACAAKAAkACgALAAkADAAOAA0ADgAPAA0AEAASABEAEgATABEAFAAWABUAFgAXABUA",
                "materials": [
                  {
                    "color": "#00ff00",
                    "roughness": 0.6,
                    "metalness": 0.2,
                    "side": 2,
                    "flatShading": true,
                    "type": "MeshStandardMaterial"
                  }
                ],
                "groups": [],
                "position": [
                  0,
                  0,
                  0
                ],
                "rotation": [
                  0,
                  0,
                  0
                ],
                "scale": [
                  1,
                  1,
                  1
                ]
              },
              "userData": {}
            }
          }
        ]
      ],
      "updated": true
    }
  }
}